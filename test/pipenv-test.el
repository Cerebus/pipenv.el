;; Test suite for pipenv.el

(require 'f)
(require 's)

(load (f-expand "pipenv.el" default-directory))

(setq existing-project (f-expand "existing-project" default-directory))
(setq new-project (f-expand "new-project" temporary-file-directory))

(ert-deftest pipenv-test-core-functions ()
  (should (equal (pipenv--build-command '("command" "arg1" "arg2"))
                 "command arg1 arg2"))
  (should (equal (pipenv--clean-response "Some response\n") "Some response")))

(ert-deftest pipenv-with-no-active-project ()
  (should (equal (pipenv-where) nil))
  (should (equal (pipenv-venv) nil))
  (should (equal (pipenv-py) nil))
  (should (equal nil python-shell-virtualenv-path))
  (should (equal nil python-shell-virtualenv-root))
  (should (equal "python" python-shell-interpreter)))

(ert-deftest pipenv-with-existing-project ()
  (cd existing-project)
  (pipenv-set)
  (should (s-ends-with? (f-filename existing-project) (pipenv-where)))
  (should (s-contains? (f-filename existing-project) (pipenv-venv)))
  (should (s-contains? (f-filename existing-project) (pipenv-py)))
  (should (s-contains? (f-filename existing-project) python-shell-virtualenv-path))
  (should (s-contains? (f-filename existing-project) python-shell-virtualenv-root))
  (should (s-contains? (f-filename existing-project) python-shell-interpreter))
  (pipenv-unset)
  (should (equal nil python-shell-virtualenv-path))
  (should (equal nil python-shell-virtualenv-root))
  (should (equal "python" python-shell-interpreter)))

(ert-deftest pipenv-with-new-project ()
  (f-mkdir new-project)
  (cd new-project)
  (pipenv-python "2")
  (pipenv-set)
  (should (s-ends-with? (f-filename new-project) (pipenv-where)))
  (should (s-contains? (f-filename new-project) (pipenv-venv)))
  (should (s-contains? (f-filename new-project) (pipenv-py)))
  (should (s-contains? (f-filename new-project) python-shell-virtualenv-path))
  (should (s-contains? (f-filename new-project) python-shell-virtualenv-root))
  (should (s-contains? (f-filename new-project) python-shell-interpreter))
  (pipenv-unset)
  (should (equal nil python-shell-virtualenv-path))
  (should (equal nil python-shell-virtualenv-root))
  (should (equal "python" python-shell-interpreter))
  (f-delete new-project 1))

;; (pipenv-update)
;; (pipenv-man)
;; (pipenv-version)
;; (pipenv-help)
;; (pipenv-check)
;; (pipenv-graph)
;; (pipenv-install)
;; (pipenv-lock)
;; (pipenv-uninstall)
;; (pipenv-update)
;; (pipenv-project?)
;; (pipenv-set)
;; (pipenv-unset)
